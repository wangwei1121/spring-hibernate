<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:util = "http://www.springframework.org/schema/util"
       xmlns:jaxws="http://cxf.apache.org/jaxws" xmlns:jaxrs="http://cxf.apache.org/jaxrs"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
				http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
				http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
				http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
				http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
				http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.1.xsd">

	<context:component-scan base-package="com.skysea.pujiang" />
	<!-- ========================= GENERAL DEFINITIONS ========================= -->
	<!-- Configurer that replaces ${...} placeholders with values from properties files -->
	<!-- (in this case, JDBC related properties) -->
<!-- 	<context:property-placeholder location="classpath:config.properties" />
	<util:properties id="configProperties" location="classpath:config.properties"/>
 -->	
	<!-- ========================= RESOURCE DEFINITIONS ========================= -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close"> 
      <!-- 基本属性 url、user、password -->
      <property name="url" value="jdbc:mysql://192.168.100.140:3306/pujiang_cruise" />
      <property name="username" value="root" />
      <property name="password" value="" />
      <!-- 配置初始化大小、最小、最大 -->
      <property name="initialSize" value="1" />
      <property name="minIdle" value="1" /> 
      <property name="maxActive" value="20" />
      <!-- 配置获取连接等待超时的时间 -->
      <property name="maxWait" value="60000" />
      <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
      <property name="timeBetweenEvictionRunsMillis" value="60000" />
      <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
      <property name="minEvictableIdleTimeMillis" value="300000" />
      <property name="validationQuery" value="SELECT 'x'" />
      <property name="testWhileIdle" value="true" />
      <property name="testOnBorrow" value="false" />
      <property name="testOnReturn" value="false" />
      <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
      <property name="poolPreparedStatements" value="false" />
      <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
      <!-- 配置监控统计拦截的filters -->
      <property name="filters" value="stat,wall,config" />
      <property name="connectionProperties" value="config.decrypt=true" />
   </bean>
   
   <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>
  
	<!-- hibernate setup -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
                <!-- 必要时在数据库新建所有表格 -->
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.show_sql">true</prop>
                 <prop key="hibernate.format_sql">false</prop>
            </props>
        </property>
        <property name="packagesToScan" value="com.skysea.pujiang.domain" />
    </bean>
    
    <!-- 配置druid监控spring-->
	<bean id="druid-stat-interceptor" class="com.alibaba.druid.support.spring.stat.DruidStatInterceptor" />
	<bean id="druid-stat-pointcut" class="org.springframework.aop.support.JdkRegexpMethodPointcut" scope="prototype">
	    <property name="patterns">
	        <list>
	            <value>com.skysea.pujiang.*</value>
	        </list>
	    </property>
	</bean>
	
	<bean id="txManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">  
    	<property name="sessionFactory" ref="sessionFactory" />
	</bean>
    
	<!-- 使用AspectJ方式配置AOP -->
	<aop:config>
	    <aop:advisor pointcut-ref="druid-stat-pointcut" advice-ref="druid-stat-interceptor" /><!-- druid 监控spring -->
	    <aop:advisor pointcut="execution(* com.sirius.pujiang.service.impl.*ServiceImpl.*(..))" advice-ref="txAdvice" /> <!-- 配置哪些类的哪些方法参与事务 --> 
	</aop:config>

	<!-- 配置事务传播特性 -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
    <tx:attributes>
        <tx:method name="insert*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
		<tx:method name="update*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
		<tx:method name="delete*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
		<tx:method name="save*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
		<tx:method name="get*"  read-only="true" />
   	 </tx:attributes>
	</tx:advice>
</beans>